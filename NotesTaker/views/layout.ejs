<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.8.0/css/bulma.min.css">
    <link href="https://demo.creativebulma.net/templates/html/pegasus/assets/css/pegasus.min.css" rel="stylesheet">
    <link rel="stylesheet" href="index.css">
    <title>Home | EJS</title>
</head>
<body>
    <div class="container">
        <!-- <div class="pageloader not-active">
            <div class="lds-ripple"><div></div><div></div></div>
          </div> -->
        <%- body %>
    </div>
    
<script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
<script src="utility.js"></script>
<script>
    const helperObject = new Utility();
    const {SelectorObject} = helperObject;
    window.addEventListener('DOMContentLoaded', () => {
        document.addEventListener('click', (e) => {
            if (e.target.id == "change-mode" && e.target.classList.contains("night-mode")) {
                e.target.src = "sunny.svg";
                e.target.classList = "light-mode";
                sessionStorage.setItem("Color_Schema", "night_mode");             
                // For dark mode
                helperObject.DarkMode();

            }else if(e.target.id == "change-mode" && e.target.classList.contains("light-mode")) {
                e.target.src = "night.svg"
                e.target.classList = "night-mode"
                sessionStorage.setItem("Color_Schema", "light_mode")
                // For light mode
                helperObject.LightMode();
            }
        })
        if (sessionStorage.getItem("Color_Schema") == "night_mode") {
            helperObject.DarkMode();
            document.getElementById('change-mode').src = "sunny.svg"
        }else {
            helperObject.LightMode();
            document.getElementById('change-mode').src = "night.svg"
        }

    })
    // This is for calculating date for each user idea
    SelectorObject.currentDate.forEach(cdate => {
        let created_time = new Date(cdate.innerHTML)
        let current_time = new Date()
        cdate.innerHTML = helperObject.diff_hours(created_time, current_time) + "hrs ago"
    })

    //Permannet class for deleting all the notes automatically
    SelectorObject.permanent_class.forEach(form => {
        Tele = form.parentElement.parentElement.previousElementSibling.childNodes[1].childNodes[5].innerHTML
        if (parseInt(Tele) > 24) {
            form.submit()
        }else {
            console.log(form);
            console.log("Will get deleted in 1 day")
        } 
    })

    // Like and unlike
    SelectorObject.hearts.forEach((heart, index) => {
        heart.addEventListener('click', (e) => {
            SelectorObject.box_image[index].src = "diamond.svg";
        })
    })

    // Code for confirmation of deleting idea permanently
    helperObject.messageBox({elementArray: SelectorObject.permanent_delete,
        title: "Are you sure?",
        text: "Do you want to delete note permanently",
        messageType: 'warning',
        buttonText: "Submit",     
    });
    //Code for confirmation of undoing idea
    helperObject.messageBox({elementArray: SelectorObject.undo_idea,
        title: "Are you sure?",
        text: "Undo this idea",
        messageType: 'warning',
        buttonText: "Submit",  
    });
    // Code for admin confirmation on deleting user from database
    helperObject.messageBox({elementArray: SelectorObject.admin_delete, 
        title: 'Are you sure?',
        text: 'Delete this user from this web app',
        messageType: 'warning',
        buttonText: 'Submit'
    });
    // Edit avatar
    let selectedImage = [];
    SelectorObject.images.forEach(img => {
        img.addEventListener('click', (e) => {
            if (selectedImage.length < 1) {
                selectedImage.push(e.target);
                localStorage.setItem("ImageUrl", selectedImage[0].children[0].value);
                e.target.classList.add('selected');
            }else {
                selectedImage[0].classList.remove('selected');
                selectedImage.pop();
                localStorage.clear();
                e.target.classList.add('selected');
                selectedImage.push(e.target);
                localStorage.setItem("ImageUrl", selectedImage[0].children[0].value)
            }
        })
    })
    SelectorObject.form.addEventListener("submit", (e) => {
        e.preventDefault();
        const url = "/editAvatar/" + localStorage.getItem("ImageUrl")
        Swal.fire({
            title: 'Are you sure?',
            text: 'You Want to select this image as avatar',
            icon: 'success',
            confirmButtonText:  "Submit"
        })
        .then(confirmed => {
            if(confirmed) {
                fetch(url, {
                    method: "POST",
                })
                .then(response => {
                    window.location = "/dashboard"
                })
            }
        })
    })
            
        
</script>
</body>
</html>